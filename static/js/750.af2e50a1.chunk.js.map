{"version":3,"file":"static/js/750.af2e50a1.chunk.js","mappings":"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","sources":["courses/dsud-94/Lab3.jsx","courses/dsud-94/Snippet.jsx","../node_modules/prismjs/components/prism-css.js"],"sourcesContent":["import Snippet from './Snippet';\n\nfunction Lab3() {\n\n    return(<div style={{margin:50}}>\n\n<Snippet step=\"2\" language=\"bash\"\n    code={`cd ~/code\nyarn add -W react@^18 react-dom@^18 @splunk/react-ui@^5 @splunk/themes@^1 styled-components@^5 @splunk/search-job@^3 @splunk/visualization-context@^27 @splunk/visualizations@^27`}\n/>\n\n<Snippet step=\"3\" language=\"jsx\"\n    code={`yarn run build\nyarn run start`}\n/>\n\n<Snippet step=\"4\" language=\"jsx\"\n    code={`/opt/splunk/bin/splunk restart`}\n/>\n\n<Snippet step=\"6\" language=\"jsx\"\n    code={`import React from 'react';\nimport { StyledContainer } from './OverviewStyles';\n\nconst Overview = () => {\n\n    return (\n        <StyledContainer>\n          Hello World!\n        </StyledContainer>\n    );\n};\nexport default Overview;`}\n/>\n\n<Snippet step=\"9\" language=\"jsx\"\n    code={`import styled from 'styled-components';\nimport { variables, mixins } from '@splunk/themes';\n\nconst StyledContainer = styled.div\\`\n    \\${mixins.reset('inline')};\n    display: block;\n    font-size: \\${variables.fontSizeLarge};\n    flex-direction: row;\n    margin: \\${variables.spacingLarge};\n    width: 80vw;\n\\`;\n\nconst sectionTitle = {\n    fontSize: '24px',\n};\n\nconst vizContainer = {\n    flex: '1',\n    height: '100%',\n    width: '100%',\n    border: '1px solid #d3d3d3',\n    borderRadius: '4px',\n    padding: '10px',\n    overflowX: 'auto',\n};\n\nconst labelStyle = {\n    margin: '0',\n    fontWeight: 'bold',\n    fontSize: '14px',\n};\n\nexport {\n    StyledContainer,\n    sectionTitle,\n    vizContainer,\n    labelStyle,\n};`}\n/>\n\n<Snippet step=\"12\" language=\"jsx\"\n    code={`, { useState, useEffect }`}\n/>\n\n<Snippet step=\"13\" language=\"jsx\"\n    code={`import SearchJob from '@splunk/search-job';`}\n/>\n\n<Snippet step=\"14\" language=\"jsx\"\n    code={`, vizContainer, sectionTitle, labelStyle`}\n/>\n\n<Snippet step=\"15\" language=\"jsx\"\n    code={`const SEARCH_TIME_RANGE = { earliest_time: \"-24h@h\", latest_time: \"now\" };`}\n/>\n\n<Snippet step=\"16\" language=\"jsx\"\n    code={`// ==== SEARCHES ====\n    \n// ==== Column Chart Search ====\nuseEffect(() => {\n    console.log('hello')\n},[]);`}\n/>\n\n<Snippet step=\"21\" language=\"jsx\"\n    code={`const [columnChartResults, setColumnChartResults] = useState({ fields: [], results: [] });\nconst [loadingColumnChart, setLoadingColumnChart] = useState(true);`}\n/>\n\n<Snippet step=\"22\" language=\"jsx\"\n    code={`setLoadingColumnChart(true);\nconst columnChartSearch = SearchJob.create({\n    search: \\`index=bccscm sourcetype=scm:logistics | chart sum(Amount) AS KilosPurchased by Country\\`,\n    ...SEARCH_TIME_RANGE\n});\n\nconst subscription = columnChartSearch.getResults().subscribe({\n    next: (results) => {\n        if (results && results.results) {\n            setColumnChartResults(results);\n        } else {\n            setColumnChartResults({ fields: [], results: [] });\n        }\n        setLoadingColumnChart(false);\n    },\n    error: (err) => {\n        console.error(\"Error fetching column chart results:\", err);\n        setColumnChartResults({ fields: [], results: [] });\n        setLoadingColumnChart(false);\n    },\n});\n\nreturn () => {\n    if (subscription) {\n        subscription.unsubscribe();\n    }\n    if (columnChartSearch) {\n        columnChartSearch.cancel();\n    }\n};`}\n/>\n\n<Snippet step=\"23\" language=\"jsx\"\n    code={`import Column from '@splunk/visualizations/Column';\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';`}\n/>\n\n<Snippet step=\"24\" language=\"jsx\"\n    code={`// ==== VISUALIZATIONS ====\n\n<h1 style={sectionTitle}>Overview</h1>\n\n{/* ===== Column Chart ===== */}\n<div style={vizContainer}>\n    <h2 style={labelStyle}>Coffee Shipments</h2>\n    {loadingColumnChart ? (\n        <WaitSpinner size=\"medium\" label=\"Loading column chart data...\" />\n    ) : (\n        <Column\n            options={{\n                title: 'Sales by Country',\n                yAxisTitleVisibility: 'hide',\n                xAxisTitleVisibility: 'hide',\n                legendDisplay: 'bottom',\n            }}\n            dataSources={{\n                primary: {\n                    data: {\n                        fields: ['Country', 'KilosPurchased'],\n                        columns:\n                            columnChartResults.results?.length > 0 ? [\n                                columnChartResults.results.map((result) => result.Country),\n                                columnChartResults.results.map((result) => result.KilosPurchased),\n                            ] : [[], []],\n                    }\n                }\n            }}\n        />\n    )}\n</div>`}\n/>\n\n<Snippet step=\"27\" language=\"js\"\n    code={`resolve: {\n    alias: {\n        '@splunk/overview': path.resolve(__dirname, '../overview/src/Overview.jsx'),\n    },\n    extensions: ['.js', '.jsx'],\n},`}\n/>\n\n<Snippet step=\"29\" language=\"jsx\"\n    code={`yarn run build\nyarn run start`}\n/>\n\n<Snippet step=\"30\" language=\"jsx\"\n    code={`/opt/splunk/bin/splunk restart`}\n/>\n\n<Snippet step=\"33\" language=\"jsx\"\n    code={`const [barChartResults, setBarChartResults] = useState({ fields: [], results: [] });\nconst [loadingBarChart, setLoadingBarChart] = useState(true);`}\n/>\n\n<Snippet step=\"34\" language=\"jsx\"\n    code={`// ==== Bar Chart Search ====\n    \nuseEffect(() => {\n    console.log('hello')\n},[]);`}\n/>\n\n<Snippet step=\"39\" language=\"jsx\"\n    code={`import Bar from '@splunk/visualizations/Bar';`}\n/>\n\n<Snippet step=\"40\" language=\"jsx\"\n    code={`setLoadingBarChart(true);\nconst barChartSearch = SearchJob.create({\n    search: \\`index=bccscm sourcetype=scm:logistics | chart count(inventory) AS Inventory by warehouse, Roast\\`,\n    ...SEARCH_TIME_RANGE\n});\n\nconst subscription = barChartSearch.getResults().subscribe({\n    next: (results) => {\n        if (results && results.results) {\n            setBarChartResults(results);\n        } else {\n            setBarChartResults({ fields: [], results: [] });\n        }\n        setLoadingBarChart(false);\n    },\n    error: (err) => {\n        console.error(\"Error fetching bar chart results:\", err);\n        setBarChartResults({ fields: [], results: [] });\n        setLoadingBarChart(false);\n    },\n});\n\nreturn () => {\n    if (subscription) {\n        subscription.unsubscribe();\n    }\n    if (barChartSearch) {\n        barChartSearch.cancel();\n    }\n};`}\n/>\n\n<Snippet step=\"41\" language=\"jsx\"\n    code={`{/* ===== Bar Chart ===== */}\n    \n<div style={vizContainer}>\n\n    <h2 style={labelStyle}>Stock Available</h2>\n    {loadingBarChart ? (\n        <WaitSpinner size=\"medium\" label=\"Loading bar chart data...\" />\n    ) : (\n        <Bar\n            options={{\n                title: 'Roasts by Location',\n                legendDisplay: 'bottom',\n            }}\n            dataSources={{\n                primary: {\n                    data: {\n                        fields: [\n                            { name: 'warehouse', },\n                            { name: 'Arabica', },\n                            { name: 'Excelsa', },\n                            { name: 'Robusta', }\n                        ],\n                        columns:\n                            barChartResults.results?.length > 0 ? [\n                                barChartResults.results.map((result) => result.warehouse),\n                                barChartResults.results.map((result) => parseFloat(result.Arabica) || 0),\n                                barChartResults.results.map((result) => parseFloat(result.Excelsa) || 0),\n                                barChartResults.results.map((result) => parseFloat(result.Robusta) || 0),\n                            ] : [[], [], [], []],\n                    }\n                }\n            }}\n        />\n    )}\n</div>`}\n/>\n\n<Snippet step=\"44\" language=\"jsx\"\n    code={`const vizRowStyle = {\n    display: 'flex',\n    height: '100%',\n    gap: '20px',\n    marginBottom: '20px',\n};\n\nvizRowStyle,`}\n/>\n\n<Snippet step=\"47\" language=\"jsx\"\n    code={`, vizRowStyle`}\n/>\n\n<Snippet step=\"48\" language=\"jsx\"\n    code={`<div style={vizRowStyle}>\n\n</div>`}\n/>\n\n\n\n    </div>);\n\n}\n\nexport default Lab3;","import React, { useEffect } from \"react\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\n\n// https://prismjs.com/#languages-list\n\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-python';               // Python\nimport 'prismjs/components/prism-bash';                 // CLI\nimport 'prismjs/components/prism-javascript';           // JavaScript\nimport 'prismjs/components/prism-json';                 // JSON\nimport 'prismjs/components/prism-jsx';                  // React\nimport 'prismjs/components/prism-makefile';             // plain text\nimport 'prismjs/components/prism-properties';           // .conf files\nimport 'prismjs/components/prism-splunk-spl';           // SPL\nimport 'prismjs/components/prism-uri';                  // URLs\nimport 'prismjs/components/prism-css';                  // CSS\nimport '../../prism.css';\n\nfunction Snippet({step, code, language}) {\n\n    useEffect(() => {\n        Prism.highlightAll();\n    },[]);\n\n    return(<div>\n        <Divider/>\n        <Stack direction=\"row\" spacing={5} sx={{margin:3}}>\n            <Avatar sx={{ bgcolor:'#f56a00', margin: 2 }}>{step}</Avatar>\n            <pre style={{width:'90%'}}><code className={`language-${language}`}>{code}</code></pre>\n        </Stack>\n    </div>);\n\n}\n\nexport default Snippet;\n","(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n"],"names":["_jsxs","style","margin","children","_jsx","Snippet","step","language","code","_ref","useEffect","Prism","Divider","Stack","direction","spacing","sx","Avatar","bgcolor","width","className","string","languages","css","pattern","RegExp","source","inside","lookbehind","alias","greedy","rest","markup","tag","addInlined","addAttribute"],"sourceRoot":""}