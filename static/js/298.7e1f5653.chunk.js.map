{"version":3,"file":"static/js/298.7e1f5653.chunk.js","mappings":"oKA+IA,QA7IA,WAEI,OAAOA,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,OAAO,IAAIC,SAAA,EAGnCC,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,SACxBC,KAAM,8FAKVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,OACxBC,KAAM,qMAQVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,OACxBC,KAAM,wFAKVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,OACxBC,KAAM,6CAIVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,aACxBC,KAAM,iJAUVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,aAExBC,KAAM,uIAKVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,OACxBC,KAAM,oCAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,aACxBC,KAAM,4CAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,OACxBC,KAAM,0CAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,OACxBC,KAAM,6FAKVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,WACxBC,KAAM,2DAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,WACxBC,KAAM,+JAgBVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,WACxBC,KAAM,4CAQVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,aACxBC,KAAM,wIASVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,aACxBC,KAAM,+GAKVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,aACxBC,KAAM,+QASVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,aACxBC,KAAM,gGAKVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,OACxBC,KAAM,oCAGVJ,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,KAAKC,SAAS,aACxBC,KAAM,8CAKV,C,uMCzGA,QAhBA,SAAgBC,GAA0B,IAAzB,KAACH,EAAI,KAAEE,EAAI,SAAED,GAASE,EAMnC,OAJAC,EAAAA,EAAAA,YAAU,KACNC,IAAAA,cAAoB,GACtB,KAEKX,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACHC,EAAAA,EAAAA,KAACQ,EAAAA,EAAO,KACRZ,EAAAA,EAAAA,MAACa,EAAAA,EAAK,CAACC,UAAU,MAAMC,QAAS,EAAGC,GAAI,CAACd,OAAO,GAAGC,SAAA,EAC9CC,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACD,GAAI,CAAEE,QAAQ,UAAWhB,OAAQ,GAAIC,SAAEG,KAC/CF,EAAAA,EAAAA,KAAA,OAAKH,MAAO,CAACkB,MAAM,OAAOhB,UAACC,EAAAA,EAAAA,KAAA,QAAMgB,UAAW,YAAYb,IAAWJ,SAAEK,WAIjF,C","sources":["courses/bsca-10/Lab2.jsx","courses/bsca-10/Snippet.jsx"],"sourcesContent":["import Snippet from './Snippet';\n\nfunction Lab2() {\n\n    return(<div style={{margin:50}}>       \n\n\n<Snippet step=\"13\" language=\"python\"\n    code={`    \"disable_existing_loggers\": True,\n    \n            \"level\": DEFAULT_LOGGING_LEVEL,`}\n/>\n\n<Snippet step=\"38\" language=\"bash\"\n    code={`cd ~/\nwget https://docs.splunk.com/images/Tutorial/tutorialdata.zip\nwget https://docs.splunk.com/images/d/db/Prices.csv.zip\nunzip tutorialdata.zip\nunzip Prices.csv.zip -x \"__MACOSX/*\"\nll`}\n/>\n\n<Snippet step=\"39\" language=\"bash\"\n    code={`cd /opt/splunk/etc/apps/bcg_eventgen\nmkdir samples\ncp ~/www1/access.log samples/`}\n/>\n\n<Snippet step=\"40\" language=\"bash\"\n    code={`mkdir lookups\ncp ~/prices.csv lookups/`}\n/>\n\n<Snippet step=\"46\" language=\"properties\"\n    code={`[access.log]\nmode = replay\nsampletype = raw\nbackfill = -7d\nindex = bcg_sales\nhost = bcg_eventgen\nsource = bcg\nsourcetype = sales:web`}\n/>\n\n<Snippet step=\"47\" language=\"properties\"\n// eslint-disable-next-line\n    code={`token.0.token = \\d{2}/\\w{3}/\\d{4}:\\d{2}:\\d{2}:\\d{2}\ntoken.0.replacementType = replaytimestamp\ntoken.0.replacement = %d/%b/%Y:%H:%M:%S`}\n/>\n\n<Snippet step=\"49\" language=\"bash\"\n    code={`/opt/splunk/bin/splunk restart`}\n/>\n\n<Snippet step=\"65\" language=\"splunk-spl\"\n    code={`index=bcg_sales sourcetype=\"sales:web\"`}\n/>\n\n<Snippet step=\"61\" language=\"bash\"\n    code={`cd /opt/splunk/etc/apps/bcg_eventgen`}\n/>\n\n<Snippet step=\"69\" language=\"bash\"\n    code={`cd /opt/splunk/etc/apps/bcg_eventgen/samples\ntouch {addons,games,mtx_event}.sample\nll`}\n/>\n\n<Snippet step=\"71\" language=\"makefile\"\n    code={`timestamp=!timestamp! gameId=!1! addon=!2! amount=!3!`}\n/>\n\n<Snippet step=\"74\" language=\"makefile\"\n    code={`DB-SG-G01\nDC-SG-G02\nFS-SG-G03\nWC-SH-G04\nPZ-SG-G05\nCU-PG-G06\nMB-AG-G07\nFI-AG-G08\nBS-AG-G09\nSC-MG-G10\nWC-SH-A01\nWC-SH-A02\nSF-BVS-G01\nSF-BVS-01`}\n/>\n\n<Snippet step=\"77\" language=\"makefile\"\n    code={`currency\nmap\nitem\nweapon\nskin\npet`}\n/>\n\n<Snippet step=\"81\" language=\"properties\"\n    code={`[mtx_event.sample]\ninterval = 3m\nbackfill = -7d\nindex = bcg_sales\nhost = bcg_eventgen\nsource = bcg\nsourcetype = sales:addons`}\n/>\n\n<Snippet step=\"82\" language=\"properties\"\n    code={`token.0.token = !timestamp!\ntoken.0.replacementType = timestamp\ntoken.0.replacement = %d/%b/%Y:%H:%M:%S`}\n/>\n\n<Snippet step=\"83\" language=\"properties\"\n    code={`token.1.token = !1!\ntoken.1.replacementType = file\ntoken.1.replacement = $SPLUNK_HOME/etc/apps/bcg_eventgen/samples/games.sample\n\ntoken.2.token = !2!\ntoken.2.replacementType = file\ntoken.2.replacement = $SPLUNK_HOME/etc/apps/bcg_eventgen/samples/addons.sample`}\n/>\n\n<Snippet step=\"84\" language=\"properties\"\n    code={`token.3.token = !3!\ntoken.3.replacementType = random\ntoken.3.replacement = float[1.00:5]`}\n/>\n\n<Snippet step=\"86\" language=\"bash\"\n    code={`/opt/splunk/bin/splunk restart`}\n/>\n\n<Snippet step=\"95\" language=\"splunk-spl\"\n    code={`index=bcg_sales sourcetype=sales:addons`}\n/>\n\n    </div>);\n\n}\n\nexport default Lab2;\n","import React, { useEffect } from \"react\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\n\n// https://prismjs.com/#languages-list\n\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-python';               // Python\nimport 'prismjs/components/prism-bash';                 // CLI\nimport 'prismjs/components/prism-javascript';           // JavaScript\nimport 'prismjs/components/prism-json';                 // JSON\nimport 'prismjs/components/prism-jsx';                  // React\nimport 'prismjs/components/prism-makefile';             // plain text\nimport 'prismjs/components/prism-properties';           // .conf files\nimport 'prismjs/components/prism-splunk-spl';           // SPL\nimport 'prismjs/components/prism-uri';                  // URLs\nimport '../../prism.css';\n\nfunction Snippet({step, code, language}) {\n\n    useEffect(() => {\n        Prism.highlightAll();\n    },[]);\n\n    return(<div>\n        <Divider/>\n        <Stack direction=\"row\" spacing={5} sx={{margin:3}}>\n            <Avatar sx={{ bgcolor:'#f56a00', margin: 2 }}>{step}</Avatar>\n            <pre style={{width:'90%'}}><code className={`language-${language}`}>{code}</code></pre>\n        </Stack>\n    </div>);\n\n}\n\nexport default Snippet;\n"],"names":["_jsxs","style","margin","children","_jsx","Snippet","step","language","code","_ref","useEffect","Prism","Divider","Stack","direction","spacing","sx","Avatar","bgcolor","width","className"],"sourceRoot":""}