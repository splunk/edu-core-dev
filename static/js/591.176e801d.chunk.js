"use strict";(self.webpackChunkedu_core_dev=self.webpackChunkedu_core_dev||[]).push([[591,638],{3591:(e,n,t)=>{t.r(n),t.d(n,{default:()=>l});var a=t(7638),s=t(579);const l=function(){return(0,s.jsxs)("div",{style:{margin:50},children:[(0,s.jsx)(a.default,{step:"10",language:"jsx",code:"import React, { useState } from 'react';\n\nconst TabSearch = () => {\n    return (<>\n        TAB SEARCH\n    </>);\n};\n\nexport default TabSearch;"}),(0,s.jsx)(a.default,{step:"13",language:"jsx",code:"import TabSearch from './TabSearch';"}),(0,s.jsx)(a.default,{step:"14",language:"jsx",code:"<TabSearch/>"}),(0,s.jsx)(a.default,{step:"18",language:"jsx",code:"    const [earliest, setEarliest] = useState('-7d@d');\n    const [search, setSearch] = useState('');"}),(0,s.jsx)(a.default,{step:"21",language:"jsx",code:"    const handleEarliest = (e, {value}) => { setEarliest(value); console.log(value); };\n    const handleSearch = (e, {value}) => { setSearch(value); console.log(value); };\n\n    const handleSubmit = (e) => {\n\n    };"}),(0,s.jsx)(a.default,{step:"25",language:"jsx",code:"import Button from '@splunk/react-ui/Button';\nimport ColumnLayout from '@splunk/react-ui/ColumnLayout';\nimport Select from '@splunk/react-ui/Select';\nimport Text from '@splunk/react-ui/Text';\n"}),(0,s.jsx)(a.default,{step:"27",language:"jsx",code:'        <ColumnLayout>\n            <ColumnLayout.Row>\n                <ColumnLayout.Column span={10}>\n                    <Text value={search} canClear onChange={handleSearch}/>\n                </ColumnLayout.Column>\n                <ColumnLayout.Column span={1}>\n                    <Select value={earliest} onChange={handleEarliest} >\n                        <Select.Option label="1 hour ago" value="-1h"/>\n                        <Select.Option label="24 hours ago" value="-24h"/>\n                        <Select.Option label="7 days ago" value="-7d@d"/>\n                    </Select>\n                </ColumnLayout.Column>\n                <ColumnLayout.Column span={1}>\n                    <Button label="Search!" appearance="primary" onClick={handleSubmit}/>\n                </ColumnLayout.Column>\n            </ColumnLayout.Row>\n        </ColumnLayout>'}),(0,s.jsx)(a.default,{step:"31",language:"bash",code:"cd ~/code/packages/my-page\nyarn add @splunk/search-job"}),(0,s.jsx)(a.default,{step:"33",language:"jsx",code:"import SearchJob from '@splunk/search-job';\nimport * as config from '@splunk/splunk-utils/config';"}),(0,s.jsx)(a.default,{step:"37",language:"jsx",code:"        const job = SearchJob.create({\n            search: search,\n            earliest_time: earliest,\n            latest_time: 'now'\n        }, {\n            app: config.app,\n            owner: config.username\n        });"}),(0,s.jsx)(a.default,{step:"41",language:"jsx",code:'        const progress = job.getProgress().subscribe({\n            next: searchState => {\n                console.log("\\njob.getProgress.next");\n                console.log(searchState);        \n            },\n            error: err => {\n                console.log(err);\n            },\n            complete: () => {\n                console.log("\\njob.getProgress.complete!");\n            }\n        });'}),(0,s.jsx)(a.default,{step:"45",language:"jsx",code:'        const results = job.getResults().subscribe({\n            next: response => {\n                console.log("\\njob.getResults.next");\n                console.log(response);\n            },\n            error: err => {\n                console.log(err);\n            },\n            complete: () => {\n                console.log("\\njob.getResults.complete!");\n            }\n        });'}),(0,s.jsx)(a.default,{step:"49",language:"splunk-spl",code:"index=bcg_sales sourcetype=sales:web"}),(0,s.jsx)(a.default,{step:"53",language:"jsx",code:'    const [fields, setFields] = useState([]);\n    const [events, setEvents] = useState([]);\n    const [status, setStatus] = useState("");\n    const [duration, setDuration] = useState("");'}),(0,s.jsx)(a.default,{step:"54",language:"jsx",code:"                setStatus(searchState.content.dispatchState);\n                setDuration(searchState.content.runDuration);"}),(0,s.jsx)(a.default,{step:"55",language:"jsx",code:"                setFields(response.fields);\n                setEvents(response.results);"}),(0,s.jsx)(a.default,{step:"58",language:"jsx",code:"import JSONTree from '@splunk/react-ui/JSONTree';\nimport StaticContent from '@splunk/react-ui/StaticContent';"}),(0,s.jsx)(a.default,{step:"60",language:"jsx",code:"        <StaticContent>Status: {status} {duration}</StaticContent>\n        <StaticContent>Fields</StaticContent>\n        <JSONTree json={fields} expandChildrenOnShiftKey />\n        <StaticContent>Events</StaticContent>\n        <JSONTree json={events} expandChildrenOnShiftKey />"}),(0,s.jsx)(a.default,{step:"65",language:"jsx",code:"import Table from '@splunk/react-ui/Table';"}),(0,s.jsx)(a.default,{step:"66",language:"jsx",code:"        <Table>\n            <Table.Head>\n                {fields.map((field,i) => (\n                    <Table.HeadCell key={'f'+i}>{field.name}</Table.HeadCell>\n                ))}\n            </Table.Head>\n            <Table.Body>\n                {events.map((event,i) => (\n                    <Table.Row key={'r'+i}>\n                        {fields.map((field,ii) => (\n                            <Table.Cell key={'c'+ii}>{event[field.name]}</Table.Cell>\n                        ))}   \n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>"}),(0,s.jsx)(a.default,{step:"70",language:"jsx",code:'                let filtered = response.fields.filter(f => !f.name.startsWith("_"));\n                filtered.push({"name": "_raw"});\n\n                setFields(filtered);'})]})}},7638:(e,n,t)=>{t.r(n),t.d(n,{default:()=>d});var a=t(5043),s=t(1045),l=t(9336),o=t(683),u=t(2999),r=t.n(u),c=(t(3817),t(6149),t(3636),t(337),t(3994),t(3839),t(4194),t(8496),t(7337),t(4608),t(579));const d=function(e){let{step:n,code:t,language:u}=e;return(0,a.useEffect)((()=>{r().highlightAll()}),[]),(0,c.jsxs)("div",{children:[(0,c.jsx)(l.A,{}),(0,c.jsxs)(o.A,{direction:"row",spacing:5,sx:{margin:3},children:[(0,c.jsx)(s.A,{sx:{bgcolor:"#f56a00",margin:2},children:n}),(0,c.jsx)("pre",{style:{width:"90%"},children:(0,c.jsx)("code",{className:`language-${u}`,children:t})})]})]})}},4608:()=>{}}]);
//# sourceMappingURL=591.176e801d.chunk.js.map