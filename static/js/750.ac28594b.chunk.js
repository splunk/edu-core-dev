(self.webpackChunkedu_core_dev=self.webpackChunkedu_core_dev||[]).push([[623,750],{3750:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>r});var t=s(623),a=s(579);const r=function(){return(0,a.jsxs)("div",{style:{margin:50},children:[(0,a.jsx)(t.default,{step:"2",language:"bash",code:"cd ~/code\nyarn add -W react@^18 react-dom@^18 @splunk/react-ui@^5 @splunk/themes@^1 styled-components@^5 @splunk/search-job@^3 @splunk/visualization-context@^27 @splunk/visualizations@^27"}),(0,a.jsx)(t.default,{step:"3",language:"jsx",code:"yarn run build\nyarn run start"}),(0,a.jsx)(t.default,{step:"4",language:"jsx",code:"/opt/splunk/bin/splunk restart"}),(0,a.jsx)(t.default,{step:"6",language:"jsx",code:"import React from 'react';\nimport { StyledContainer } from './OverviewStyles';\n\nconst Overview = () => {\n\n    return (\n        <StyledContainer>\n          Hello World!\n        </StyledContainer>\n    );\n};\n\nexport default Overview;"}),(0,a.jsx)(t.default,{step:"9",language:"jsx",code:"import styled from 'styled-components';\nimport { variables, mixins } from '@splunk/themes';\n\nconst StyledContainer = styled.div`\n    ${mixins.reset('inline')};\n    display: block;\n    font-size: ${variables.fontSizeLarge};\n    flex-direction: row;\n    margin: ${variables.spacingLarge};\n    width: 80vw;\n`;\n\nconst sectionTitle = {\n    fontSize: '24px',\n};\n\nconst vizContainer = {\n    flex: '1',\n    height: '100%',\n    width: '100%',\n    border: '1px solid #d3d3d3',\n    borderRadius: '4px',\n    padding: '10px',\n    overflowX: 'auto',\n};\n\nconst labelStyle = {\n    margin: '0',\n    fontWeight: 'bold',\n    fontSize: '14px',\n};\n\nexport {\n    StyledContainer,\n    sectionTitle,\n    vizContainer,\n    labelStyle,\n};"}),(0,a.jsx)(t.default,{step:"12",language:"jsx",code:", { useState, useEffect }"}),(0,a.jsx)(t.default,{step:"13",language:"jsx",code:"import SearchJob from '@splunk/search-job';"}),(0,a.jsx)(t.default,{step:"14",language:"jsx",code:", vizContainer, sectionTitle, labelStyle"}),(0,a.jsx)(t.default,{step:"15",language:"jsx",code:'const SEARCH_TIME_RANGE = { earliest_time: "-24h@h", latest_time: "now" };'}),(0,a.jsx)(t.default,{step:"16",language:"jsx",code:"// ==== SEARCHES ====\n    \n// ==== Column Chart Search ====\nuseEffect(() => {\n    console.log('hello')\n},[]);"}),(0,a.jsx)(t.default,{step:"21",language:"jsx",code:"const [columnChartResults, setColumnChartResults] = useState({ fields: [], results: [] });\nconst [loadingColumnChart, setLoadingColumnChart] = useState(true);"}),(0,a.jsx)(t.default,{step:"22",language:"jsx",code:'setLoadingColumnChart(true);\nconst columnChartSearch = SearchJob.create({\n    search: `index=bccscm sourcetype=scm:logistics | chart sum(Amount) AS KilosPurchased by Country`,\n    ...SEARCH_TIME_RANGE\n});\n\nconst subscription = columnChartSearch.getResults().subscribe({\n    next: (results) => {\n        if (results && results.results) {\n            setColumnChartResults(results);\n        } else {\n            setColumnChartResults({ fields: [], results: [] });\n        }\n        setLoadingColumnChart(false);\n    },\n    error: (err) => {\n        console.error("Error fetching column chart results:", err);\n        setColumnChartResults({ fields: [], results: [] });\n        setLoadingColumnChart(false);\n    },\n});\n\nreturn () => {\n    if (subscription) {\n        subscription.unsubscribe();\n    }\n    if (columnChartSearch) {\n        columnChartSearch.cancel();\n    }\n};'}),(0,a.jsx)(t.default,{step:"23",language:"jsx",code:"import Column from '@splunk/visualizations/Column';\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';"}),(0,a.jsx)(t.default,{step:"24",language:"jsx",code:"// ==== VISUALIZATIONS ====\n\nreturn (\n<StyledContainer>\n\n<h1 style={sectionTitle}>Overview</h1>\n\n{/* ===== Column Chart ===== */}\n<div style={vizContainer}>\n    <h2 style={labelStyle}>Coffee Shipments</h2>\n    {loadingColumnChart ? (\n        <WaitSpinner size=\"medium\" label=\"Loading column chart data...\" />\n    ) : (\n        <Column\n            options={{\n                title: 'Sales by Country',\n                yAxisTitleVisibility: 'hide',\n                xAxisTitleVisibility: 'hide',\n                legendDisplay: 'bottom',\n            }}\n            dataSources={{\n                primary: {\n                    data: {\n                        fields: ['Country', 'KilosPurchased'],\n                        columns:\n                            columnChartResults.results?.length > 0 ? [\n                                columnChartResults.results.map((result) => result.Country),\n                                columnChartResults.results.map((result) => result.KilosPurchased),\n                            ] : [[], []],\n                    }\n                }\n            }}\n        />\n    )}\n</div>"}),(0,a.jsx)(t.default,{step:"26",language:"jsx",code:"yarn run build\nyarn run start"}),(0,a.jsx)(t.default,{step:"27",language:"jsx",code:"/opt/splunk/bin/splunk restart"}),(0,a.jsx)(t.default,{step:"30",language:"jsx",code:"const [barChartResults, setBarChartResults] = useState({ fields: [], results: [] });\nconst [loadingBarChart, setLoadingBarChart] = useState(true);"}),(0,a.jsx)(t.default,{step:"31",language:"jsx",code:"// ==== Bar Chart Search ====\n    \nuseEffect(() => {\n    console.log('hello')\n},[]);"}),(0,a.jsx)(t.default,{step:"36",language:"jsx",code:"import Bar from '@splunk/visualizations/Bar';"}),(0,a.jsx)(t.default,{step:"37",language:"jsx",code:'setLoadingBarChart(true);\nconst barChartSearch = SearchJob.create({\n    search: `index=bccscm sourcetype=scm:logistics | chart count(inventory) AS Inventory by warehouse, Roast`,\n    ...SEARCH_TIME_RANGE\n});\n\nconst subscription = barChartSearch.getResults().subscribe({\n    next: (results) => {\n        if (results && results.results) {\n            setBarChartResults(results);\n        } else {\n            setBarChartResults({ fields: [], results: [] });\n        }\n        setLoadingBarChart(false);\n    },\n    error: (err) => {\n        console.error("Error fetching bar chart results:", err);\n        setBarChartResults({ fields: [], results: [] });\n        setLoadingBarChart(false);\n    },\n});\n\nreturn () => {\n    if (subscription) {\n        subscription.unsubscribe();\n    }\n    if (barChartSearch) {\n        barChartSearch.cancel();\n    }\n};'}),(0,a.jsx)(t.default,{step:"38",language:"jsx",code:"{/* ===== Bar Chart ===== */}\n    \n<div style={vizContainer}>\n\n    <h2 style={labelStyle}>Stock Available</h2>\n    {loadingBarChart ? (\n        <WaitSpinner size=\"medium\" label=\"Loading bar chart data...\" />\n    ) : (\n        <Bar\n            options={{\n                title: 'Roasts by Location',\n                legendDisplay: 'bottom',\n            }}\n            dataSources={{\n                primary: {\n                    data: {\n                        fields: [\n                            { name: 'warehouse', },\n                            { name: 'Arabica', },\n                            { name: 'Excelsa', },\n                            { name: 'Robusta', }\n                        ],\n                        columns:\n                            barChartResults.results?.length > 0 ? [\n                                barChartResults.results.map((result) => result.warehouse),\n                                barChartResults.results.map((result) => parseFloat(result.Arabica) || 0),\n                                barChartResults.results.map((result) => parseFloat(result.Excelsa) || 0),\n                                barChartResults.results.map((result) => parseFloat(result.Robusta) || 0),\n                            ] : [[], [], [], []],\n                    }\n                }\n            }}\n        />\n    )}\n</div>"}),(0,a.jsx)(t.default,{step:"41",language:"jsx",code:"const vizRowStyle = {\n    display: 'flex',\n    height: '100%',\n    gap: '20px',\n    marginBottom: '20px',\n};\n\nexport {\n   StyledContainer,\n   sectionTitle,\n   vizContainer,\n   labelStyle,\n   vizRowStyle,\n};"}),(0,a.jsx)(t.default,{step:"44",language:"jsx",code:", vizRowStyle"}),(0,a.jsx)(t.default,{step:"45",language:"jsx",code:"<div style={vizRowStyle}>\n\n</div>"})]})}},623:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>c});var t=s(5043),a=s(1045),r=s(9336),l=s(683),o=s(2999),u=s.n(o),i=(s(3817),s(6149),s(3636),s(337),s(3994),s(3839),s(4194),s(8496),s(7337),s(944),s(4608),s(579));const c=function(e){let{step:n,code:s,language:o}=e;return(0,t.useEffect)((()=>{u().highlightAll()}),[]),(0,i.jsxs)("div",{children:[(0,i.jsx)(r.A,{}),(0,i.jsxs)(l.A,{direction:"row",spacing:5,sx:{margin:3},children:[(0,i.jsx)(a.A,{sx:{bgcolor:"#f56a00",margin:2},children:n}),(0,i.jsx)("pre",{style:{width:"90%"},children:(0,i.jsx)("code",{className:`language-${o}`,children:s})})]})]})}},944:()=>{!function(e){var n=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:RegExp("@[\\w-](?:"+/[^;{\s"']|\s+(?!\s)/.source+"|"+n.source+")*?"+/(?:;|(?=\s*\{))/.source),inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+n.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+n.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+n.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:n,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var s=e.languages.markup;s&&(s.tag.addInlined("style","css"),s.tag.addAttribute("style","css"))}(Prism)},4608:()=>{}}]);
//# sourceMappingURL=750.ac28594b.chunk.js.map