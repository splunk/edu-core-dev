{"version":3,"file":"static/js/9.b235bd08.chunk.js","mappings":"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","sources":["courses/dsud-94/Lab4.jsx","courses/dsud-94/Snippet.jsx","../node_modules/prismjs/components/prism-css.js"],"sourcesContent":["import Snippet from './Snippet';\n\nfunction Lab4() {\n\n    return(<div style={{margin:50}}>\n\n<Snippet step=\"2\" language=\"bash\"\n    code={`cd ~/code\nsplunk-create`}\n/>\n\n<Snippet step=\"6\" language=\"jsx\"\n    code={`import React from 'react';\n    \nimport { StyledContainer } from './InventoryStyles';\n\nconst Inventory = () => {\n    return (\n        <StyledContainer>\n         Hello World!\n        </StyledContainer>\n    );\n};\nexport default Inventory;`}\n/>\n\n<Snippet step=\"10\" language=\"bash\"\n    code={`import Inventory from '@splunk/inventory';\n<Inventory />`}\n/>\n\n<Snippet step=\"13\" language=\"bash\"\n    code={`'@splunk/inventory': path.resolve(__dirname, '../inventory/src/Inventory.jsx'),`}\n/>\n\n<Snippet step=\"15\" language=\"bash\"\n    code={`yarn run build\nyarn run start`}\n/>\n        \n<Snippet step=\"16\" language=\"bash\"\n    code={`/opt/splunk/bin/splunk restart`}\n/>\n        \n<Snippet step=\"18\" language=\"jsx\"\n    code={`import styled from 'styled-components';\nimport { variables, mixins } from '@splunk/themes';\n\nconst StyledContainer = styled.div\\`\n    \\${mixins.reset('inline')};\n    display: block;\n    width: '100%',\n    font-size: \\${variables.fontSizeLarge};\n    flex-direction: row;\n    margin: \\${variables.spacingLarge};\n    width: 80vw;\n    height: 40vw;\n\\`;\n\nconst sectionTitle = {\n    fontSize: '24px',\n};\n\nconst vizContainer = {\n    flex: '1',\n    border: '1px solid #d3d3d3',\n    borderRadius: '4px',\n    padding: '10px',\n    overflowX: 'auto',\n};\n\nconst labelStyle = {\n    margin: '0',\n    fontWeight: 'bold',\n    fontSize: '14px',\n};\n\nexport {\n    StyledContainer,\n    sectionTitle,\n    vizContainer,\n    labelStyle,\n};`}\n/>\n\n<Snippet step=\"21\" language=\"jsx\"\n    code={`, { useState, useEffect }`}\n/>\n\n<Snippet step=\"22\" language=\"jsx\"\n    code={`// ==== SEARCHES ====\n    \n// ==== Table Search ====\nuseEffect(() => {\n    console.log('hello')\n},[]);`}\n/>\n\n<Snippet step=\"27\" language=\"jsx\"\n    code={`import SearchJob from '@splunk/search-job';\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';`}\n/>\n\n<Snippet step=\"28\" language=\"jsx\"\n    code={`, sectionTitle, vizContainer, labelStyle`}\n/>\n\n<Snippet step=\"29\" language=\"jsx\"\n    code={`const SEARCH_TIME_RANGE = { earliest_time: \"-7d@d\", latest_time: \"now\" };`}\n/>\n\n<Snippet step=\"30\" language=\"jsx\"\n    code={`const [tableResults, setTableResults] = useState({ fields: [], results: [] });\nconst [loadingTable, setLoadingTable] = useState(true);`}\n/>\n\n<Snippet step=\"31\" language=\"jsx\"\n    code={`setLoadingTable(true);\nconst tableSearch = SearchJob.create({\n    search: \\`index=bccscm sourcetype=scm:logistics | table orderNo, Country, Roast, schedule, shipDate, deliveryDate, Amount, warehouse\\`,\n    ...SEARCH_TIME_RANGE,\n});\n\nconst subscription = tableSearch.getResults().subscribe({\n    next: (results) => {\n        if (results?.results?.length && results?.fields?.length) {\n            setTableResults(results);\n        } else {\n            setTableResults({ fields: [], results: [] });\n        }\n        setLoadingTable(false);\n    },\n    error: (err) => {\n        console.error(\"Error fetching results:\", err);\n        setTableResults({ fields: [], results: [] });\n        setLoadingTable(false);\n    },\n});\n\nreturn () => {\n    subscription.unsubscribe();\n};`}\n/>\n\n<Snippet step=\"32\" language=\"jsx\"\n    code={`import Table from '@splunk/react-ui/Table';`}\n/>\n\n<Snippet step=\"33\" language=\"jsx\"\n    code={`// ==== VISUALIZATIONS ====\n    \n    {/* ===== Table ===== */}\n<div style={vizContainer}>\n    {loadingTable ? (\n        <WaitSpinner size=\"medium\" label=\"Loading dropdown data...\" />\n    ) : tableResults?.fields?.length && tableResults?.results?.length ? (\n        <>\n        <Table stripeRows>\n            <Table.Head>\n                {tableResults.fields?.map((field) => (\n                    <Table.HeadCell key={field.name}>{field.name}</Table.HeadCell>\n                ))}\n            </Table.Head>\n            <Table.Body>\n                {tableResults.results?.map((result, rowIndex) => (\n                    <Table.Row key={rowIndex}>\n                        {tableResults.fields?.map((field) => (\n                            <Table.Cell key={\\`\\${rowIndex}-\\${field.name}\\`}>\n                                {result[field.name] || \"N/A\"}\n                            </Table.Cell>\n                        ))}\n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>\n        </>\n    ) : (\n        <div>No table data available.</div>\n    )}\n</div>`}\n/>\n\n<Snippet step=\"38\" language=\"jsx\"\n    code={`import Paginator from '@splunk/react-ui/Paginator';`}\n/>\n\n<Snippet step=\"39\" language=\"jsx\"\n    code={`const [currentPage, setCurrentPage] = useState(1);`}\n/>\n\n<Snippet step=\"40\" language=\"jsx\"\n    code={`const rowsPerPage = 11;`}\n/>\n\n<Snippet step=\"41\" language=\"jsx\"\n    code={`const handlePageChange = (e, { page }) => {\n    setCurrentPage(page);\n};`}\n/>\n\n<Snippet step=\"42\" language=\"jsx\"\n    code={`const startIndex = (currentPage - 1) * rowsPerPage;`}\n/>\n\n<Snippet step=\"43\" language=\"jsx\"\n    code={`const displayedRows = tableResults.results.slice(startIndex, startIndex + rowsPerPage);`}\n/>\n\n<Snippet step=\"44\" language=\"jsx\"\n    code={`displayedRows`}\n/>\n\n<Snippet step=\"45\" language=\"jsx\"\n    code={`{tableResults.results.length > 0 && (\n\n)}`}\n/>\n\n<Snippet step=\"46\" language=\"jsx\"\n    code={`<Paginator\n    current={currentPage}\n    totalPages={Math.max(1, Math.ceil(tableResults.results.length / rowsPerPage))}\n    onChange={handlePageChange}\n/>`}\n/>\n\n<Snippet step=\"50\" language=\"jsx\"\n    code={`<h1 style={sectionTitle}>Inventory</h1>`}\n/>\n\n<Snippet step=\"51\" language=\"jsx\"\n    code={`<h2 style={labelStyle}>Coffee Shipments</h2>`}\n/>\n\n<Snippet step=\"52\" language=\"jsx\"\n    code={`<Table.HeadCell>Order No.</Table.HeadCell>\n<Table.HeadCell>Country</Table.HeadCell>\n<Table.HeadCell>Roast</Table.HeadCell>\n<Table.HeadCell>Schedule</Table.HeadCell>\n<Table.HeadCell>Ship Date</Table.HeadCell>\n<Table.HeadCell>Delivery Date</Table.HeadCell>\n<Table.HeadCell>Amount (kg)</Table.HeadCell>\n<Table.HeadCell>Warehouse</Table.HeadCell>`}\n/>\n\n<Snippet step=\"56\" language=\"jsx\"\n    code={`const dropdownButtonStyle = {\n    width: '170px',\n    textAlign: 'left',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    position: 'relative',\n    paddingRight: '30px'\n};\n\nconst arrowStyle = {\n    position: 'absolute',\n    right: '10px',\n    top: '50%',\n    width: '0',\n    height: '0',\n    borderLeft: '6px solid transparent',\n    borderRight: '6px solid transparent',\n    borderTop: '6px solid black',\n    pointerEvents: 'none',\n    transform: 'translateY(-50%)'\n};\n\nconst menuItemStyle = {\n    textAlign: 'left'\n};\n\n\n, dropdownButtonStyle, arrowStyle, menuItemStyle`}\n/>\n\n<Snippet step=\"59\" language=\"jsx\"\n    code={`import Dropdown from '@splunk/react-ui/Dropdown';\nimport Button from '@splunk/react-ui/Button';\nimport Menu from '@splunk/react-ui/Menu';`}\n/>\n\n<Snippet step=\"60\" language=\"jsx\"\n    code={`, dropdownButtonStyle, menuItemStyle, arrowStyle`}\n/>\n\n<Snippet step=\"62\" language=\"jsx\"\n    code={`const [countryToken, setCountryToken] = useState('*');\nconst [displayCountry, setDisplayCountry] = useState('All Countries');\nconst [dropdownOptions, setDropdownOptions] = useState(['All Countries']);\nconst [loadingDropdown, setLoadingDropdown] = useState(false);\nconst handleMenuItemClick = (label) => {\n    if (label === 'All Countries') {\n        setCountryToken('*');\n        setDisplayCountry('All Countries');\n    } else {\n        setCountryToken(label);\n        setDisplayCountry(label);\n    }\n};`}\n/>\n\n<Snippet step=\"63\" language=\"jsx\"\n    code={`// ===== Dropdown Search =====\nuseEffect(() => {\n    setLoadingDropdown(true);\n\n    const dropdownSearch = SearchJob.create({\n        search: \\`| inputlookup purchasesByCountry | fields Country\\`,\n        ...SEARCH_TIME_RANGE\n    });\n\n    const subscription = dropdownSearch.getResults().subscribe({\n        next: (results) => {\n            if (results && results.results && results.fields) {\n                const countries = results.results.map(result => result.Country || 'Unknown');\n                setDropdownOptions(['All Countries', ...countries]);\n            } else {\n                setDropdownOptions(['All Countries']);\n            }\n            setLoadingDropdown(false);\n        },\n        error: (err) => {\n            console.error(\"Error fetching data:\", err, \"with countryToken:\", countryToken || \"Not provided\");\n            setDropdownOptions(['All Countries']);\n            setTotalSystemCount(0);\n            setLoadingDropdown(false);\n        },\n    });\n\n    return () => {\n        if (subscription) {\n            subscription.unsubscribe();\n        }\n    };\n}, [countryToken]);`}\n/>\n\n<Snippet step=\"64\" language=\"jsx\"\n    code={`{/* ===== Dropdown Input ===== */}\n<p style={labelStyle}>Select a Country:</p>\n{loadingDropdown ? (\n    <WaitSpinner size=\"small\" label=\"Loading dropdown data...\" />\n) : (\n    <Dropdown\n        toggle={\n            <Button style={dropdownButtonStyle}>\n                {displayCountry}\n                <span style={arrowStyle}></span>\n            </Button>\n    }>\n        <Menu style={{ width: 270 }}>\n            {dropdownOptions.map((country, index) => (\n                <Menu.Item key={index} onClick={() => handleMenuItemClick(country)} style={menuItemStyle}>{country}</Menu.Item>\n            ))}\n        </Menu>\n    </Dropdown>\n)}\n<p />`}\n/>\n\n<Snippet step=\"65\" language=\"jsx\"\n    code={`| search Country=\"\\${countryToken}\"`}\n/>\n\n<Snippet step=\"66\" language=\"jsx\"\n    code={`countryToken`}\n/>\n\n<Snippet step=\"67\" language=\"jsx\"\n    code={`: {displayCountry}`}\n/>\n\n\n    </div>);\n\n}\n\nexport default Lab4;","import React, { useEffect } from \"react\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\n\n// https://prismjs.com/#languages-list\n\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-python';               // Python\nimport 'prismjs/components/prism-bash';                 // CLI\nimport 'prismjs/components/prism-javascript';           // JavaScript\nimport 'prismjs/components/prism-json';                 // JSON\nimport 'prismjs/components/prism-jsx';                  // React\nimport 'prismjs/components/prism-makefile';             // plain text\nimport 'prismjs/components/prism-properties';           // .conf files\nimport 'prismjs/components/prism-splunk-spl';           // SPL\nimport 'prismjs/components/prism-uri';                  // URLs\nimport 'prismjs/components/prism-css';                  // CSS\nimport '../../prism.css';\n\nfunction Snippet({step, code, language}) {\n\n    useEffect(() => {\n        Prism.highlightAll();\n    },[]);\n\n    return(<div>\n        <Divider/>\n        <Stack direction=\"row\" spacing={5} sx={{margin:3}}>\n            <Avatar sx={{ bgcolor:'#f56a00', margin: 2 }}>{step}</Avatar>\n            <pre style={{width:'90%'}}><code className={`language-${language}`}>{code}</code></pre>\n        </Stack>\n    </div>);\n\n}\n\nexport default Snippet;\n","(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n"],"names":["_jsxs","style","margin","children","_jsx","Snippet","step","language","code","_ref","useEffect","Prism","Divider","Stack","direction","spacing","sx","Avatar","bgcolor","width","className","string","languages","css","pattern","RegExp","source","inside","lookbehind","alias","greedy","rest","markup","tag","addInlined","addAttribute"],"sourceRoot":""}