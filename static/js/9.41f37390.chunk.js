(self.webpackChunkedu_core_dev=self.webpackChunkedu_core_dev||[]).push([[9,623],{9009:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>a});var s=t(623),l=t(579);const a=function(){return(0,l.jsxs)("div",{style:{margin:50},children:[(0,l.jsx)(s.default,{step:"2",language:"bash",code:"cd ~/code\nsplunk-create"}),(0,l.jsx)(s.default,{step:"6",language:"jsx",code:"import React from 'react';\nimport { StyledContainer } from './InventoryStyles';\nconst Inventory = () => {\n    return (\n        <StyledContainer>\n         Hello World!\n        </StyledContainer>\n    );\n};\nexport default Inventory;"}),(0,l.jsx)(s.default,{step:"11",language:"bash",code:"import Inventory from '@splunk/inventory';\n<Inventory />"}),(0,l.jsx)(s.default,{step:"14",language:"bash",code:"'@splunk/inventory': path.resolve(__dirname, '../inventory/src/Inventory.jsx'),"}),(0,l.jsx)(s.default,{step:"16",language:"bash",code:"yarn run build\nyarn run start"}),(0,l.jsx)(s.default,{step:"17",language:"bash",code:"/opt/splunk/bin/splunk restart"}),(0,l.jsx)(s.default,{step:"19",language:"jsx",code:"import styled from 'styled-components';\nimport { variables, mixins } from '@splunk/themes';\n\nconst StyledContainer = styled.div`\n    ${mixins.reset('inline')};\n    display: block;\n    width: '100%',\n    font-size: ${variables.fontSizeLarge};\n    flex-direction: row;\n    margin: ${variables.spacingLarge};\n    width: 80vw;\n    height: 40vw;\n`;\n\nconst sectionTitle = {\n    fontSize: '24px',\n};\n\nconst vizContainer = {\n    flex: '1',\n    border: '1px solid #d3d3d3',\n    borderRadius: '4px',\n    padding: '10px',\n    overflowX: 'auto',\n};\n\nconst labelStyle = {\n    margin: '0',\n    fontWeight: 'bold',\n    fontSize: '14px',\n};\n\nexport {\n    StyledContainer,\n    sectionTitle,\n    vizContainer,\n    labelStyle,\n};"}),(0,l.jsx)(s.default,{step:"22",language:"jsx",code:", { useState, useEffect }"}),(0,l.jsx)(s.default,{step:"23",language:"jsx",code:"// ==== SEARCHES ====\n    \n// ==== Table Search ====\nuseEffect(() => {\n    console.log('hello')\n},[]);"}),(0,l.jsx)(s.default,{step:"28",language:"jsx",code:"import SearchJob from '@splunk/search-job';\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';"}),(0,l.jsx)(s.default,{step:"29",language:"jsx",code:", sectionTitle, vizContainer, labelStyle"}),(0,l.jsx)(s.default,{step:"30",language:"jsx",code:'const SEARCH_TIME_RANGE = { earliest_time: "-7d@d", latest_time: "now" };'}),(0,l.jsx)(s.default,{step:"31",language:"jsx",code:"const [tableResults, setTableResults] = useState({ fields: [], results: [] });\nconst [loadingTable, setLoadingTable] = useState(true);"}),(0,l.jsx)(s.default,{step:"32",language:"jsx",code:'setLoadingTable(true);\nconst tableSearch = SearchJob.create({\n    search: `index=bccscm sourcetype=scm:logistics | table orderNo, Country, Roast, schedule, shipDate, deliveryDate, Amount, warehouse`,\n    ...SEARCH_TIME_RANGE,\n});\n\nconst subscription = tableSearch.getResults().subscribe({\n    next: (results) => {\n        if (results?.results?.length && results?.fields?.length) {\n            setTableResults(results);\n        } else {\n            setTableResults({ fields: [], results: [] });\n        }\n        setLoadingTable(false);\n    },\n    error: (err) => {\n        console.error("Error fetching results:", err);\n        setTableResults({ fields: [], results: [] });\n        setLoadingTable(false);\n    },\n});\n\nreturn () => {\n    subscription.unsubscribe();\n};'}),(0,l.jsx)(s.default,{step:"33",language:"jsx",code:"import Table from '@splunk/react-ui/Table';"}),(0,l.jsx)(s.default,{step:"34",language:"jsx",code:'// ==== VISUALIZATIONS ====\n    \n    {/* ===== Table ===== */}\n<div style={vizContainer}>\n    {loadingTable ? (\n        <WaitSpinner size="medium" label="Loading dropdown data..." />\n    ) : tableResults?.fields?.length && tableResults?.results?.length ? (\n        <>\n        <Table stripeRows>\n            <Table.Head>\n                {tableResults.fields?.map((field) => (\n                    <Table.HeadCell key={field.name}>{field.name}</Table.HeadCell>\n                ))}\n            </Table.Head>\n            <Table.Body>\n                {tableResults.results?.map((result, rowIndex) => (\n                    <Table.Row key={rowIndex}>\n                        {tableResults.fields?.map((field) => (\n                            <Table.Cell key={`${rowIndex}-${field.name}`}>\n                                {result[field.name] || "N/A"}\n                            </Table.Cell>\n                        ))}\n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>\n        </>\n    ) : (\n        <div>No table data available.</div>\n    )}\n</div>'}),(0,l.jsx)(s.default,{step:"39",language:"jsx",code:"import Paginator from '@splunk/react-ui/Paginator';"}),(0,l.jsx)(s.default,{step:"40",language:"jsx",code:"const [currentPage, setCurrentPage] = useState(1);"}),(0,l.jsx)(s.default,{step:"41",language:"jsx",code:"const rowsPerPage = 11;"}),(0,l.jsx)(s.default,{step:"42",language:"jsx",code:"const handlePageChange = (e, { page }) => {\n    setCurrentPage(page);\n};"}),(0,l.jsx)(s.default,{step:"43",language:"jsx",code:"const startIndex = (currentPage - 1) * rowsPerPage;"}),(0,l.jsx)(s.default,{step:"44",language:"jsx",code:"const displayedRows = tableResults.results.slice(startIndex, startIndex + rowsPerPage);"}),(0,l.jsx)(s.default,{step:"45",language:"jsx",code:"displayedRows"}),(0,l.jsx)(s.default,{step:"46",language:"jsx",code:"{tableResults.results.length > 0 && (\n\n)}"}),(0,l.jsx)(s.default,{step:"47",language:"jsx",code:"<Paginator\n    current={currentPage}\n    totalPages={Math.max(1, Math.ceil(tableResults.results.length / rowsPerPage))}\n    onChange={handlePageChange}\n/>"}),(0,l.jsx)(s.default,{step:"51",language:"jsx",code:"<h1 style={sectionTitle}>Inventory</h1>"}),(0,l.jsx)(s.default,{step:"52",language:"jsx",code:"<h2 style={labelStyle}>Coffee Shipments</h2>"}),(0,l.jsx)(s.default,{step:"53",language:"jsx",code:"<Table.HeadCell>Order No.</Table.HeadCell>\n<Table.HeadCell>Country</Table.HeadCell>\n<Table.HeadCell>Roast</Table.HeadCell>\n<Table.HeadCell>Schedule</Table.HeadCell>\n<Table.HeadCell>Ship Date</Table.HeadCell>\n<Table.HeadCell>Delivery Date</Table.HeadCell>\n<Table.HeadCell>Amount (kg)</Table.HeadCell>\n<Table.HeadCell>Warehouse</Table.HeadCell>"}),(0,l.jsx)(s.default,{step:"57",language:"jsx",code:"const dropdownButtonStyle = {\n    width: '170px',\n    textAlign: 'left',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    position: 'relative',\n    paddingRight: '30px'\n};\n\nconst arrowStyle = {\n    position: 'absolute',\n    right: '10px',\n    top: '50%',\n    width: '0',\n    height: '0',\n    borderLeft: '6px solid transparent',\n    borderRight: '6px solid transparent',\n    borderTop: '6px solid black',\n    pointerEvents: 'none',\n    transform: 'translateY(-50%)'\n};\n\nconst menuItemStyle = {\n    textAlign: 'left'\n};\n\n\ndropdownButtonStyle, arrowStyle, menuItemStyle"}),(0,l.jsx)(s.default,{step:"60",language:"jsx",code:"import Dropdown from '@splunk/react-ui/Dropdown';\nimport Button from '@splunk/react-ui/Button';\nimport Menu from '@splunk/react-ui/Menu';"}),(0,l.jsx)(s.default,{step:"61",language:"jsx",code:",\ndropdownButtonStyle,\nmenuItemStyle,\narrowStyle"}),(0,l.jsx)(s.default,{step:"63",language:"jsx",code:"const [countryToken, setCountryToken] = useState('*');\nconst [displayCountry, setDisplayCountry] = useState('All Countries');\nconst [dropdownOptions, setDropdownOptions] = useState(['All Countries']);\nconst [loadingDropdown, setLoadingDropdown] = useState(false);\nconst handleMenuItemClick = (label) => {\n    if (label === 'All Countries') {\n        setCountryToken('*');\n        setDisplayCountry('All Countries');\n    } else {\n        setCountryToken(label);\n        setDisplayCountry(label);\n    }\n};"}),(0,l.jsx)(s.default,{step:"64",language:"jsx",code:"// ===== Dropdown Search =====\nuseEffect(() => {\n    setLoadingDropdown(true);\n\n    const dropdownSearch = SearchJob.create({\n        search: `| inputlookup purchasesByCountry | fields Country`,\n        ...SEARCH_TIME_RANGE\n    });\n\n    const subscription = dropdownSearch.getResults().subscribe({\n        next: (results) => {\n            if (results && results.results && results.fields) {\n                const countries = results.results.map(result => result.Country || 'Unknown');\n                setDropdownOptions(['All Countries', ...countries]);\n            } else {\n                setDropdownOptions(['All Countries']);\n            }\n            setLoadingDropdown(false);\n        },\n        error: (err) => {\n            console.error(\"Error fetching data:\", err, \"with countryToken:\", countryToken || \"Not provided\");\n            setDropdownOptions(['All Countries']);\n            setTotalSystemCount(0);\n            setLoadingDropdown(false);\n        },\n    });\n\n    return () => {\n        if (subscription) {\n            subscription.unsubscribe();\n        }\n    };\n}, [countryToken]);"}),(0,l.jsx)(s.default,{step:"65",language:"jsx",code:'{/* ===== Dropdown Input ===== */}\n<p style={labelStyle}>Select a Country:</p>\n{loadingDropdown ? (\n    <WaitSpinner size="small" label="Loading dropdown data..." />\n) : (\n    <Dropdown\n        toggle={\n            <Button style={dropdownButtonStyle}>\n                {displayCountry}\n                <span style={arrowStyle}></span>\n            </Button>\n    }>\n        <Menu style={{ width: 270 }}>\n            {dropdownOptions.map((country, index) => (\n                <Menu.Item key={index} onClick={() => handleMenuItemClick(country)} style={menuItemStyle}>{country}</Menu.Item>\n            ))}\n        </Menu>\n    </Dropdown>\n)}\n<p />'}),(0,l.jsx)(s.default,{step:"66",language:"jsx",code:'| search Country="${countryToken}"'}),(0,l.jsx)(s.default,{step:"67",language:"jsx",code:"countryToken"}),(0,l.jsx)(s.default,{step:"68",language:"jsx",code:": {displayCountry}"})]})}},623:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>i});var s=t(5043),l=t(1045),a=t(9336),o=t(683),r=t(2999),u=t.n(r),d=(t(3817),t(6149),t(3636),t(337),t(3994),t(3839),t(4194),t(8496),t(7337),t(944),t(4608),t(579));const i=function(e){let{step:n,code:t,language:r}=e;return(0,s.useEffect)((()=>{u().highlightAll()}),[]),(0,d.jsxs)("div",{children:[(0,d.jsx)(a.A,{}),(0,d.jsxs)(o.A,{direction:"row",spacing:5,sx:{margin:3},children:[(0,d.jsx)(l.A,{sx:{bgcolor:"#f56a00",margin:2},children:n}),(0,d.jsx)("pre",{style:{width:"90%"},children:(0,d.jsx)("code",{className:`language-${r}`,children:t})})]})]})}},944:()=>{!function(e){var n=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:RegExp("@[\\w-](?:"+/[^;{\s"']|\s+(?!\s)/.source+"|"+n.source+")*?"+/(?:;|(?=\s*\{))/.source),inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+n.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+n.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+n.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:n,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var t=e.languages.markup;t&&(t.tag.addInlined("style","css"),t.tag.addAttribute("style","css"))}(Prism)},4608:()=>{}}]);
//# sourceMappingURL=9.41f37390.chunk.js.map