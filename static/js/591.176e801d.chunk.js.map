{"version":3,"file":"static/js/591.176e801d.chunk.js","mappings":"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","sources":["courses/bsua-10/Lab5.jsx","courses/bsua-10/Snippet.jsx"],"sourcesContent":["import Snippet from './Snippet';\n\nfunction Lab5() {\n\n    return(<div style={{margin:50}}>\n\n\n<Snippet step=\"10\" language=\"jsx\"\n    code={`import React, { useState } from 'react';\n\nconst TabSearch = () => {\n    return (<>\n        TAB SEARCH\n    </>);\n};\n\nexport default TabSearch;`}\n/>\n\n<Snippet step=\"13\" language=\"jsx\"\n    code={`import TabSearch from './TabSearch';`}\n/>\n\n<Snippet step=\"14\" language=\"jsx\"\n    code={`<TabSearch/>`}\n/>\n\n<Snippet step=\"18\" language=\"jsx\"\n    code={`    const [earliest, setEarliest] = useState('-7d@d');\n    const [search, setSearch] = useState('');`}\n/>\n\n<Snippet step=\"21\" language=\"jsx\"\n    code={`    const handleEarliest = (e, {value}) => { setEarliest(value); console.log(value); };\n    const handleSearch = (e, {value}) => { setSearch(value); console.log(value); };\n\n    const handleSubmit = (e) => {\n\n    };`}\n/>\n\n<Snippet step=\"25\" language=\"jsx\"\n    code={`import Button from '@splunk/react-ui/Button';\nimport ColumnLayout from '@splunk/react-ui/ColumnLayout';\nimport Select from '@splunk/react-ui/Select';\nimport Text from '@splunk/react-ui/Text';\n`}\n/>\n\n<Snippet step=\"27\" language=\"jsx\"\n    code={`        <ColumnLayout>\n            <ColumnLayout.Row>\n                <ColumnLayout.Column span={10}>\n                    <Text value={search} canClear onChange={handleSearch}/>\n                </ColumnLayout.Column>\n                <ColumnLayout.Column span={1}>\n                    <Select value={earliest} onChange={handleEarliest} >\n                        <Select.Option label=\"1 hour ago\" value=\"-1h\"/>\n                        <Select.Option label=\"24 hours ago\" value=\"-24h\"/>\n                        <Select.Option label=\"7 days ago\" value=\"-7d@d\"/>\n                    </Select>\n                </ColumnLayout.Column>\n                <ColumnLayout.Column span={1}>\n                    <Button label=\"Search!\" appearance=\"primary\" onClick={handleSubmit}/>\n                </ColumnLayout.Column>\n            </ColumnLayout.Row>\n        </ColumnLayout>`}\n/>\n\n<Snippet step=\"31\" language=\"bash\"\n    code={`cd ~/code/packages/my-page\nyarn add @splunk/search-job`}\n/>\n\n<Snippet step=\"33\" language=\"jsx\"\n    code={`import SearchJob from '@splunk/search-job';\nimport * as config from '@splunk/splunk-utils/config';`}\n/>\n\n<Snippet step=\"37\" language=\"jsx\"\n    code={`        const job = SearchJob.create({\n            search: search,\n            earliest_time: earliest,\n            latest_time: 'now'\n        }, {\n            app: config.app,\n            owner: config.username\n        });`}\n/>\n\n<Snippet step=\"41\" language=\"jsx\"\n    code={`        const progress = job.getProgress().subscribe({\n            next: searchState => {\n                console.log(\"\\\\njob.getProgress.next\");\n                console.log(searchState);        \n            },\n            error: err => {\n                console.log(err);\n            },\n            complete: () => {\n                console.log(\"\\\\njob.getProgress.complete!\");\n            }\n        });`}\n/>\n\n<Snippet step=\"45\" language=\"jsx\"\n    code={`        const results = job.getResults().subscribe({\n            next: response => {\n                console.log(\"\\\\njob.getResults.next\");\n                console.log(response);\n            },\n            error: err => {\n                console.log(err);\n            },\n            complete: () => {\n                console.log(\"\\\\njob.getResults.complete!\");\n            }\n        });`}\n/>\n\n<Snippet step=\"49\" language=\"splunk-spl\"\n    code={`index=bcg_sales sourcetype=sales:web`}\n/>\n\n<Snippet step=\"53\" language=\"jsx\"\n    code={`    const [fields, setFields] = useState([]);\n    const [events, setEvents] = useState([]);\n    const [status, setStatus] = useState(\"\");\n    const [duration, setDuration] = useState(\"\");`}\n/>\n\n<Snippet step=\"54\" language=\"jsx\"\n    code={`                setStatus(searchState.content.dispatchState);\n                setDuration(searchState.content.runDuration);`}\n/>\n\n<Snippet step=\"55\" language=\"jsx\"\n    code={`                setFields(response.fields);\n                setEvents(response.results);`}\n/>\n\n<Snippet step=\"58\" language=\"jsx\"\n    code={`import JSONTree from '@splunk/react-ui/JSONTree';\nimport StaticContent from '@splunk/react-ui/StaticContent';`}\n/>\n\n<Snippet step=\"60\" language=\"jsx\"\n    code={`        <StaticContent>Status: {status} {duration}</StaticContent>\n        <StaticContent>Fields</StaticContent>\n        <JSONTree json={fields} expandChildrenOnShiftKey />\n        <StaticContent>Events</StaticContent>\n        <JSONTree json={events} expandChildrenOnShiftKey />`}\n/>\n\n<Snippet step=\"65\" language=\"jsx\"\n    code={`import Table from '@splunk/react-ui/Table';`}\n/>\n\n<Snippet step=\"66\" language=\"jsx\"\n    code={`        <Table>\n            <Table.Head>\n                {fields.map((field,i) => (\n                    <Table.HeadCell key={'f'+i}>{field.name}</Table.HeadCell>\n                ))}\n            </Table.Head>\n            <Table.Body>\n                {events.map((event,i) => (\n                    <Table.Row key={'r'+i}>\n                        {fields.map((field,ii) => (\n                            <Table.Cell key={'c'+ii}>{event[field.name]}</Table.Cell>\n                        ))}   \n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>`}\n/>\n\n<Snippet step=\"70\" language=\"jsx\"\n    code={`                let filtered = response.fields.filter(f => !f.name.startsWith(\"_\"));\n                filtered.push({\"name\": \"_raw\"});\n\n                setFields(filtered);`}\n/>\n\n\n    </div>);\n\n}\n\nexport default Lab5;\n","import React, { useEffect } from \"react\";\n\nimport Avatar from '@mui/material/Avatar';\nimport Divider from '@mui/material/Divider';\nimport Stack from '@mui/material/Stack';\n\n// https://prismjs.com/#languages-list\n\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-python';               // Python\nimport 'prismjs/components/prism-bash';                 // CLI\nimport 'prismjs/components/prism-javascript';           // JavaScript\nimport 'prismjs/components/prism-json';                 // JSON\nimport 'prismjs/components/prism-jsx';                  // React\nimport 'prismjs/components/prism-makefile';             // plain text\nimport 'prismjs/components/prism-properties';           // .conf files\nimport 'prismjs/components/prism-splunk-spl';           // SPL\nimport 'prismjs/components/prism-uri';                  // URLs\nimport '../../prism.css';\n\nfunction Snippet({step, code, language}) {\n\n    useEffect(() => {\n        Prism.highlightAll();\n    },[]);\n\n    return(<div>\n        <Divider/>\n        <Stack direction=\"row\" spacing={5} sx={{margin:3}}>\n            <Avatar sx={{ bgcolor:'#f56a00', margin: 2 }}>{step}</Avatar>\n            <pre style={{width:'90%'}}><code className={`language-${language}`}>{code}</code></pre>\n        </Stack>\n    </div>);\n\n}\n\nexport default Snippet;\n"],"names":["_jsxs","style","margin","children","_jsx","Snippet","step","language","code","_ref","useEffect","Prism","Divider","Stack","direction","spacing","sx","Avatar","bgcolor","width","className"],"sourceRoot":""}